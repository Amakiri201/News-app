diff --git a/node_modules/ts-newsapi/lib/index.js b/node_modules/ts-newsapi/lib/index.js
index 547b0d9..4b6df83 100644
--- a/node_modules/ts-newsapi/lib/index.js
+++ b/node_modules/ts-newsapi/lib/index.js
@@ -1,155 +1,58 @@
-"use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __exportStar = (this && this.__exportStar) || function(m, exports) {
-    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
-};
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-const node_fetch_1 = __importDefault(require("node-fetch"));
-const querystring_1 = __importDefault(require("querystring"));
-__exportStar(require("./types"), exports);
-/**
- * Breaking news headlines, and search for articles from news sources and blogs all over the web
- */
+'use strict';
+
 class NewsAPI {
+    static BASE_URL = 'https://newsapi.org/v2';
+
     constructor(apiKey) {
-        this._apiKey = apiKey;
+        this.apiKey = apiKey;
     }
-    /**
-     * This endpoint provides live top and breaking headlines for a country,
-     * specific category in a country, single source, or multiple sources.
-     * You can also search with keywords.
-     * Articles are sorted by the earliest date published first.
-     * This endpoint is great for retrieving headlines for display on news tickers or similar.
-     */
-    getTopHeadlines(params = {}) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const endpointUrl = `${NewsAPI._URL}/top-headlines`;
-            // validate sources param
-            if (params.sources && params.sources.length) {
-                if (params.country) {
-                    throw new Error(`you can't mix 'country' with the 'sources' param.`);
-                }
-                if (params.category) {
-                    throw new Error(`you can't mix 'category' with the 'sources' param.`);
-                }
-            }
-            const queries = [querystring_1.default.stringify({ apiKey: this._apiKey })];
-            if (params.q) {
-                queries.push(querystring_1.default.stringify({ q: params.q }));
-            }
-            if (params.country) {
-                queries.push(querystring_1.default.stringify({ country: params.country }));
-            }
-            if (params.category) {
-                queries.push(querystring_1.default.stringify({ category: params.category }));
-            }
-            if (params.sources && params.sources.length) {
-                queries.push(querystring_1.default.stringify({ sources: params.sources.join(',') }));
-            }
-            if (params.pageSize) {
-                queries.push(querystring_1.default.stringify({ pageSize: params.pageSize }));
-            }
-            if (params.page) {
-                queries.push(querystring_1.default.stringify({ page: params.page }));
-            }
-            const response = yield (0, node_fetch_1.default)(`${endpointUrl}?${queries.join('&')}`);
-            const data = yield response.json();
-            return data;
-        });
+
+    async getTopHeadlines(params = {}) {
+        const endpointUrl = `${NewsAPI.BASE_URL}/top-headlines`;
+        
+        if (params.sources && params.sources.length) {
+            if (params.country) throw new Error("You can't mix 'country' with 'sources'.");
+            if (params.category) throw new Error("You can't mix 'category' with 'sources'.");
+        }
+        
+        const urlParams = this._constructParams(params);
+        return this._fetchData(endpointUrl, urlParams);
     }
-    /**
-     * Search through millions of articles from over 50,000 large and small news sources and blogs.
-     * This includes breaking news as well as lesser articles.
-     * This endpoint suits article discovery and analysis,
-     * but can be used to retrieve articles for display, too.
-     */
-    getEverything(params = {}) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const endpointUrl = `${NewsAPI._URL}/everything`;
-            const queries = [querystring_1.default.stringify({ apiKey: this._apiKey })];
-            if (params.q) {
-                queries.push(querystring_1.default.stringify({ q: params.q }));
-            }
-            if (params.qInTitle) {
-                queries.push(querystring_1.default.stringify({ qInTitle: params.qInTitle }));
-            }
-            if (params.sources && params.sources.length) {
-                queries.push(querystring_1.default.stringify({ sources: params.sources.join(',') }));
-            }
-            if (params.domains && params.domains.length) {
-                queries.push(querystring_1.default.stringify({ domains: params.domains.join(',') }));
-            }
-            if (params.excludeDomains && params.excludeDomains.length) {
-                queries.push(querystring_1.default.stringify({ excludeDomains: params.excludeDomains.join(',') }));
-            }
-            if (params.from) {
-                queries.push(querystring_1.default.stringify({ from: params.from }));
-            }
-            if (params.to) {
-                queries.push(querystring_1.default.stringify({ to: params.to }));
-            }
-            if (params.language) {
-                queries.push(querystring_1.default.stringify({ language: params.language }));
-            }
-            if (params.sortBy) {
-                queries.push(querystring_1.default.stringify({ sortBy: params.sortBy }));
-            }
-            if (params.pageSize) {
-                queries.push(querystring_1.default.stringify({ pageSize: params.pageSize }));
-            }
-            if (params.page) {
-                queries.push(querystring_1.default.stringify({ page: params.page }));
-            }
-            const response = yield (0, node_fetch_1.default)(`${endpointUrl}?${queries.join('&')}`);
-            const data = yield response.json();
-            return data;
-        });
+
+    async getEverything(params = {}) {
+        const endpointUrl = `${NewsAPI.BASE_URL}/everything`;
+        const urlParams = this._constructParams(params);
+        return this._fetchData(endpointUrl, urlParams);
     }
-    /**
-     * This endpoint returns the subset of news publishers that top headlines are available from.
-     * It's mainly a convenience endpoint that you can use to keep track of the publishers available on the API,
-     * and you can pipe it straight through to your users.
-     */
-    getSources(params = {}) {
-        return __awaiter(this, void 0, void 0, function* () {
-            const endpointUrl = `${NewsAPI._URL}/sources`;
-            const queries = [querystring_1.default.stringify({ apiKey: this._apiKey })];
-            if (params.category) {
-                queries.push(querystring_1.default.stringify({ category: params.category }));
-            }
-            if (params.language) {
-                queries.push(querystring_1.default.stringify({ language: params.language }));
-            }
-            if (params.country) {
-                queries.push(querystring_1.default.stringify({ country: params.country }));
+
+    async getSources(params = {}) {
+        const endpointUrl = `${NewsAPI.BASE_URL}/sources`;
+        const urlParams = this._constructParams(params);
+        return this._fetchData(endpointUrl, urlParams);
+    }
+
+    _constructParams(params) {
+        const urlParams = new URLSearchParams({ apiKey: this.apiKey });
+        Object.keys(params).forEach(key => {
+            if (Array.isArray(params[key])) {
+                urlParams.append(key, params[key].join(','));
+            } else if (params[key]) {
+                urlParams.append(key, params[key]);
             }
-            const response = yield (0, node_fetch_1.default)(`${endpointUrl}?${queries.join('&')}`);
-            const data = yield response.json();
-            return data;
         });
+        return urlParams;
+    }
+
+    async _fetchData(url, params) {
+        try {
+            const response = await fetch(`${url}?${params.toString()}`);
+            if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
+            return await response.json();
+        } catch (error) {
+            console.error('Error fetching data:', error);
+            return { error: error.message };
+        }
     }
 }
-exports.default = NewsAPI;
-NewsAPI._URL = 'https://newsapi.org/v2';
+
+export default NewsAPI;
